import by.tigre.numbers.entity.Difficult;
import by.tigre.numbers.entity.GameType;
import kotlin.Int;

CREATE TABLE History(
id INTEGER PRIMARY KEY AUTOINCREMENT,
date INTEGER NOT NULL,
duration INTEGER NOT NULL,
difficult INTEGER AS Difficult NOT NULL DEFAULT 0,
correctCount INTEGER AS Int NOT NULL,
totalCount INTEGER AS Int NOT NULL,
gameType INTEGER AS GameType
);

insertHistory:
INSERT INTO History(date, duration, difficult, correctCount, totalCount, gameType)
VALUES(?, ?, ?, ?, ?, ?);

selectAll:
SELECT * FROM History ORDER BY id DESC LIMIT :limit;

selectByTypeAndDifficult:
SELECT * FROM History WHERE difficult IN :difficult AND gameType IN :gameTypes ORDER BY id DESC LIMIT :limit;

selectByTypeAndDifficultOnlyCorrect:
SELECT * FROM History WHERE difficult IN :difficult AND gameType IN :gameTypes AND correctCount = totalCount ORDER BY id DESC LIMIT :limit;

insertHistoryWithId {
INSERT INTO History(date, duration, difficult, correctCount, totalCount, gameType) VALUES(?, ?, ?, ?, ?, ?);
SELECT last_insert_rowid();
}

insertHistoryWithData {
INSERT INTO History(date, duration, difficult, correctCount, totalCount, gameType) VALUES(?, ?, ?, ?, ?, ?);
INSERT INTO HistoryItem(historyId, data) VALUES(last_insert_rowid(), :historyData);
}
